{"version":3,"file":"static/js/373.b42341c0.chunk.js","mappings":"sPACA,EAA4B,oC,SC4C5B,EAvCyB,WACvB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,KAAKC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvDK,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA8BN,EAAAA,EAAAA,WAAS,GAAKO,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BV,EAAAA,EAAAA,UAAS,MAAKW,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAkBtB,OAhBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEKC,EAAAA,EAAAA,IAAkB3B,GAAS,KAAD,EAA5CuB,EAASC,EAAAI,KACfpB,EAAgBe,GAChBX,GAAW,GAAOY,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAElBM,QAAQf,MAAM,6BAA4BS,EAAAK,IAC1Cb,EAAQQ,EAAAK,IACRjB,GAAW,GAAO,yBAAAY,EAAAO,OAAA,GAAAT,EAAA,kBAErB,kBAVmB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAYpBf,GACF,GAAG,CAAClB,IAEAW,GACKuB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,0BAGVpB,GACKqB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,8BAA4BpB,EAAMsB,YAI9CD,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAcJ,SAAA,EAE5BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,wBACJD,EAAAA,EAAAA,KAACM,EAAQ,CAACpC,KAAMG,EAAaH,SAGnC,C,uKCvCAqC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,oCAOT,IAAMC,EAAmB,eAAAxB,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAsB,EAAA,OAAAvB,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAERe,EAAAA,EAAAA,IAAU,sBAAsB,KAAD,EAAxC,OAARG,EAAQpB,EAAAI,KAAAJ,EAAAqB,OAAA,SACPD,EAASE,KAAKC,SAAO,OAE4B,MAF5BvB,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE5BM,QAAQf,MAAM,kCAAiCS,EAAAK,IAASL,EAAAK,GAAA,yBAAAL,EAAAO,OAAA,GAAAT,EAAA,kBAG3D,kBAR+B,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAoBnBN,EAAiB,eAAAqB,GAAA5B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4B,EAAMjD,GAAO,IAAA4C,EAAA,OAAAvB,IAAAA,MAAA,SAAA6B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAzB,KAAA,EAAAyB,EAAAxB,KAAA,EAEnBe,EAAAA,EAAAA,IAAU,SAADU,OAAUnD,IAAW,KAAD,EAAtC,OAAR4C,EAAQM,EAAAtB,KAAAsB,EAAAL,OAAA,SACPD,EAASE,MAAI,OAEkC,MAFlCI,EAAAzB,KAAA,EAAAyB,EAAArB,GAAAqB,EAAA,SAEpBpB,QAAQf,MAAM,gCAA+BmC,EAAArB,IAASqB,EAAArB,GAAA,yBAAAqB,EAAAnB,OAAA,GAAAkB,EAAA,kBAGzD,gBAR6BG,GAAA,OAAAJ,EAAAhB,MAAA,KAAAC,UAAA,KAUjBoB,EAAc,eAAAC,GAAAlC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkC,EAAMvD,GAAO,IAAA4C,EAAA,OAAAvB,IAAAA,MAAA,SAAAmC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAEhBe,EAAAA,EAAAA,IAAU,SAADU,OAAUnD,EAAO,cAAa,KAAD,EAA/C,OAAR4C,EAAQY,EAAA5B,KAAA4B,EAAAX,OAAA,SACPD,EAASE,KAAK1C,MAAI,OAE0B,MAF1BoD,EAAA/B,KAAA,EAAA+B,EAAA3B,GAAA2B,EAAA,SAEzB1B,QAAQf,MAAM,6BAA4ByC,EAAA3B,IAAS2B,EAAA3B,GAAA,yBAAA2B,EAAAzB,OAAA,GAAAwB,EAAA,kBAGtD,gBAR0BE,GAAA,OAAAH,EAAAtB,MAAA,KAAAC,UAAA,KAUdyB,EAAiB,eAAAC,GAAAvC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAuC,EAAM5D,GAAO,IAAA4C,EAAA,OAAAvB,IAAAA,MAAA,SAAAwC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAApC,KAAA,EAAAoC,EAAAnC,KAAA,EAEnBe,EAAAA,EAAAA,IAAU,SAADU,OAAUnD,EAAO,cAAa,KAAD,EAA/C,OAAR4C,EAAQiB,EAAAjC,KAAAiC,EAAAhB,OAAA,SACPD,EAASE,KAAKC,SAAO,OAE0B,MAF1Bc,EAAApC,KAAA,EAAAoC,EAAAhC,GAAAgC,EAAA,SAE5B/B,QAAQf,MAAM,gCAA+B8C,EAAAhC,IAASgC,EAAAhC,GAAA,yBAAAgC,EAAA9B,OAAA,GAAA6B,EAAA,kBAGzD,gBAR6BE,GAAA,OAAAH,EAAA3B,MAAA,KAAAC,UAAA,I","sources":["webpack://react-homework-template/./src/Pages/MovieDetailsPage/MovieDetailsPage.module.css?1154","Pages/MovieDetailsPage/MovieDetailsPage.jsx","themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetailsPage_container__l5vtn\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CastList from './MovieDetailsPage'; // Adjust the import path based on your project structure\nimport { fetchMovieDetails } from '../../themoviedb-api'; // Adjust the import path based on your project structure\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({ cast: [] }); // Set initial state with 'cast' property\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const movieData = await fetchMovieDetails(movieId);\n        setMovieDetails(movieData); // Update state\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movie data:', error);\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovieData();\n  }, [movieId]);\n\n  if (loading) {\n    return <div>Loading movie data...</div>;\n  }\n\n  if (error) {\n    return <div>Error fetching movie data: {error.message}</div>;\n  }\n\n  return (\n    <div className={css.container}>\n      {/* Display other movie details here */}\n      <h1>Movie Details Page</h1>\n      <CastList cast={movieDetails.cast} />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'a930ab26c84d78c11b4064b5c7257e43'; // Replace with your actual API key\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieByQuery = async movieName => {\n  try {\n    const response = await axios.get(`search/movie?query=${movieName}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie by query:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n"],"names":["movieId","useParams","_useState","useState","cast","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchMovieData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","_context","prev","next","fetchMovieDetails","sent","t0","console","stop","apply","arguments","_jsx","children","_jsxs","message","className","css","CastList","axios","api_key","fetchTrendingMovies","response","abrupt","data","results","_ref3","_callee3","_context3","concat","_x2","fetchMovieCast","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}