{"version":3,"file":"static/js/460.bdf8dd58.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.jsx","webpack://react-homework-template/./src/Pages/MovieDetailsPage/MovieDetailsPage.module.css?1154","Pages/MovieDetailsPage/MovieDetailsPage.jsx","themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CastList_container__9Z7Yv\",\"member\":\"CastList_member__1FOxS\"};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchMovieCast } from '../../themoviedb-api'; // Adjust the import path based on your project structure\nimport css from './CastList.module.css';\n\nconst CastList = ({ idMovie }) => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCastData = async () => {\n      try {\n        const castData = await fetchMovieCast(idMovie);\n        setCast(castData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching cast data:', error);\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchCastData();\n  }, [idMovie]);\n\n  if (loading) {\n    return <div>Loading cast data...</div>;\n  }\n\n  if (error) {\n    return <div>Error fetching cast data: {error.message}</div>;\n  }\n\n  return (\n    <div className={css.container}>\n      <h2>Cast</h2>\n      <ul>\n        {cast.slice(0,5).map(castMember => (\n          <li key={castMember.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w185${castMember.profile_path}`}\n              alt={castMember.name}\n            />\n            <p className={css.member}>{castMember.name}</p>\n            <p>Character: {castMember.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCastList.propTypes = {\n  idMovie: PropTypes.string.isRequired,\n};\n\nexport default CastList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetailsPage_container__l5vtn\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CastList from 'components/CastList/CastList';// Adjust the import path based on your project structure\nimport { fetchMovieDetails } from '../../themoviedb-api'; // Adjust the import path based on your project structure\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({ cast: [] }); // Set initial state with 'cast' property\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const movieData = await fetchMovieDetails(movieId);\n        setMovieDetails(movieData); // Update state\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movie data:', error);\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovieData();\n  }, [movieId]);\n\n  if (loading) {\n    return <div>Loading movie data...</div>;\n  }\n\n  if (error) {\n    return <div>Error fetching movie data: {error.message}</div>;\n  }\n\n  return (\n    <div className={css.container}>\n      {/* Display other movie details here */}\n      <h1>Movie Details Page</h1>\n      <CastList idMovie={movieDetails.cast} />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'a930ab26c84d78c11b4064b5c7257e43'; // Replace with your actual API key\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieByQuery = async movieName => {\n  try {\n    const response = await axios.get(`search/movie?query=${movieName}`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie by query:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n"],"names":["_ref","idMovie","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchCastData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","fetchMovieCast","sent","t0","console","stop","apply","arguments","_jsx","children","_jsxs","message","className","css","slice","map","castMember","src","concat","profile_path","alt","name","character","id","movieId","useParams","movieDetails","setMovieDetails","fetchMovieData","movieData","fetchMovieDetails","CastList","axios","api_key","fetchTrendingMovies","response","abrupt","data","results","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}